worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Allow larger uploads and disable buffering
    client_max_body_size 100m;
    client_body_buffer_size 128k;

    # Stream uploads directly to backend
    proxy_request_buffering off;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # HTTPS server
    server {
        listen 443 ssl;
        server_name digi4live.collab-cloud.eu;
        ssl_certificate     /etc/cert/fullchain.crt;
        ssl_certificate_key /etc/cert/server.key;

        # Compose service routing
        location /compose/ {
            rewrite ^/compose/(.*)$ /$1 break;
            proxy_pass http://compose-service:3000/;
            proxy_redirect off;

            add_header Access-Control-Allow-Origin  *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

            proxy_set_header Host               $host;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_set_header X-Forwarded-Host   $host;
        }

        # Consumer UI
        location /consume/ {
            rewrite ^/consume/(.*)$ /$1 break;
            proxy_pass http://consumer-ui:8000/;
            proxy_redirect off;

            add_header Access-Control-Allow-Origin  *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

            proxy_set_header Host               $host;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_set_header X-Forwarded-Host   $host;
        }

        # Provider UI
        location /provider-ui/ {
            rewrite ^/provider-ui/(.*)$ /$1 break;
            proxy_pass http://provider-ui:8000/;
            proxy_redirect off;

            add_header Access-Control-Allow-Origin  *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

            proxy_set_header Host               $host;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_set_header X-Forwarded-Host   $host;
        }

        # Connector Registration UI
        location /connector-registration-user-interface/ {
            rewrite ^/connector-registration-user-interface/(.*)$ /$1 break;
            proxy_pass http://connector-registration-user-interface:8000/;
            proxy_redirect off;

            add_header Access-Control-Allow-Origin  *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

            proxy_set_header Host               $host;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_set_header X-Forwarded-Host   $host;
        }

        # Connector Registration API
        location /connector-registration/ {
            rewrite ^/connector-registration/(.*)$ /$1 break;
            proxy_pass http://connector-registration:5001/;
            proxy_redirect off;

            add_header Access-Control-Allow-Origin  *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

            proxy_set_header Host               $host;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_set_header X-Forwarded-Host   $host;
        }

        # Provider Connector service
        location /connector/ {
            proxy_pass http://connector:8081/;
            proxy_redirect     off;

            add_header Access-Control-Allow-Origin  *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

            proxy_set_header Host               $host;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_set_header X-Forwarded-Host   $host;
        }

        # Broker Core endpoints
        location /broker/connectors/ {
            rewrite ^/broker/connectors/(.*)$ /connectors/$1 break;
            proxy_pass http://broker-core:8080/connectors/;
            proxy_redirect off;
        }

        location /broker/catalog/ {
            rewrite ^/broker/catalog/(.*)$ /catalog/$1 break;
            proxy_pass http://broker-core:8080/catalog/;
            proxy_redirect off;
        }

        location /broker/fuseki/ {
            rewrite ^/broker/fuseki/(.*)$ /$1 break;
            proxy_pass http://broker-fuseki:3030/;
            proxy_redirect off;
        }

        location /broker/infrastructure/ {
            rewrite ^/broker/infrastructure/(.*)$ /infrastructure/$1 break;
            proxy_pass http://broker-core:8080/infrastructure/;
            proxy_redirect off;
        }

        # Public API for connectors (with CORS)
        location /api/connectors/ {
            rewrite ^/api/connectors/(.*)$ /connectors/$1 break;
            proxy_pass http://broker-core:8080/connectors/;
            proxy_redirect off;

            add_header Access-Control-Allow-Origin  *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

            proxy_set_header Host               $host;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_set_header X-Forwarded-Host   $host;
        }

        # Identity (Omejdn) proxy
        location /auth/ {
            rewrite ^/auth/(.*)$ /$1 break;
            proxy_pass http://omejdn-server:4567/;
            proxy_redirect off;
        }

        # Admin UI (Omejdn UI)
        location / {
            rewrite ^/(.*)$ /$1 break;
            proxy_pass http://omejdn-ui/;
            proxy_redirect off;
        }

        # Well-known URIs for OpenID/OAuth2
        location /.well-known/ {
            rewrite ^/\.well-known/oauth-authorization-server/auth /auth/.well-known/oauth-authorization-server last;
            rewrite ^/\.well-known/openid-configuration/auth       /auth/.well-known/openid-configuration       last;
            rewrite ^/\.well-known/webfinger /auth/.well-known/webfinger last;
            rewrite ^/\.well-known/jwks.json /auth/jwks.json last;
            proxy_pass http://omejdn-server:4567/;
            proxy_redirect off;
        }
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name digi4live.collab-cloud.eu;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    sendfile        on;
    keepalive_timeout 65;
}
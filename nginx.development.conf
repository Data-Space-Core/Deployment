# nginx.development.conf
worker_processes  auto;
user              nginx;
error_log         /var/log/nginx/error.log notice;
pid               /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log main;

    sendfile        on;
    keepalive_timeout 65;

    # use Docker DNS
    resolver 127.0.0.11 valid=30s;

    upstream provide_backend  { server provide-connector:8081; }
    upstream consume_backend  { server consume-connector:8081; }
    upstream broker_backend   { server broker-core:8080; }
    upstream fuseki_backend   { server broker-fuseki:3030; }
    upstream auth_backend     { server daps:4567; }
    upstream ui_backend       { server omejdn-ui:80; }

    # HTTP â†’ HTTPS
    server {
        listen      80;
        server_name __HOST__;
        return      301 https://$host$request_uri;
    }

    server {
        listen       443 ssl;
        http2;
        server_name  __HOST__;

        ssl_certificate     /etc/cert/__CERT__;
        ssl_certificate_key /etc/cert/__KEY__;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        # Provider
        location /provide/ {
            proxy_pass         https://provide_backend/;
            proxy_ssl_verify   off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            add_header         Access-Control-Allow-Origin  *;
            add_header         Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header         Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        }

        # Consumer
        location /consume/ {
            proxy_pass         https://consume_backend/;
            proxy_ssl_verify   off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            add_header         Access-Control-Allow-Origin  *;
            add_header         Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header         Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        }

        # Broker Core API
        location /broker/ {
            proxy_pass         http://broker_backend/;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
        }

        # Fuseki SPARQL
        location /fuseki/ {
            proxy_pass         http://fuseki_backend/;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
        }

        # DAPS / OpenID
        location /auth/ {
            proxy_pass         http://auth_backend/;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
        }

        # UI & catch-all
        location / {
            proxy_pass         http://ui_backend/;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
        }
    }
}

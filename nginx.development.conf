user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" '
                      '"$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # Docker’s built-in DNS resolver:
    resolver 127.0.0.11 valid=30s;

    # Upstreams by service name
    upstream provide_backend {
        server provide-connector:8081;
    }
    upstream consume_backend {
        server consume-connector:8081;
    }
    upstream broker_backend {
        server broker-core:8080;
    }
    upstream auth_backend {
        server omejdn-server:4567;
    }
    upstream ui_backend {
        server omejdn-ui:80;
    }

    # Redirect all HTTP → HTTPS
    server {
        listen      80;
        server_name __HOST__;
        return      301 https://$host$request_uri;
    }

    server {
        listen              443 ssl http2;
        server_name         __HOST__;

        ssl_certificate     /etc/cert/fullchain.pem;
        ssl_certificate_key /etc/cert/privkey.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        # Provide connector
        location /provide/ {
            proxy_pass         http://provide_backend;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
        }

        # Consume connector
        location /consume/ {
            proxy_pass         http://consume_backend;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
        }

        # Broker Core
        location /broker/ {
            proxy_pass         http://broker_backend;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
        }

        # DAPS / OpenID
        location /auth/ {
            proxy_pass         http://auth_backend;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
        }

        # Omejdn UI & fallback
        location / {
            proxy_pass         http://ui_backend;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
        }
    }
}

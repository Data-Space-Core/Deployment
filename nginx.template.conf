worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # HTTPS server
    server {
        listen 443 ssl;
        server_name ${FQDN};
        ssl_certificate /etc/cert/${CERT_FILE};
        ssl_certificate_key /etc/cert/${KEY_FILE};

        location /connector-registration-user-interface/ {
            rewrite ^/connector-registration-user-interface/(.*)$ /$1 break;
            proxy_pass http://connector-registration-user-interface:8000/;
            proxy_redirect off;

            add_header Access-Control-Allow-Origin   ${ALLOWED_ORIGIN};
            add_header Access-Control-Allow-Methods  'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers  'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_set_header X-Forwarded-Host   $host;
            proxy_set_header Host               $host;
        }

        location /connector-registration/ {
            rewrite ^/connector-registration/(.*)$ /$1 break;
            proxy_pass http://connector-registration:5001/;
            proxy_redirect off;

            add_header Access-Control-Allow-Origin   ${ALLOWED_ORIGIN};
            add_header Access-Control-Allow-Methods  'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers  'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_set_header X-Forwarded-Host   $host;
            proxy_set_header Host               $host;
        }

        location /consume/ {
            proxy_pass http://consumer-ui:8000/consume/;
            proxy_redirect off;

            add_header Access-Control-Allow-Origin   ${ALLOWED_ORIGIN};
            add_header Access-Control-Allow-Methods  'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers  'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

            proxy_set_header Host               $host;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_set_header X-Forwarded-Host   $host;
        }

        # Provider‐UI file‐uploads
        location /upload/ {
            proxy_pass http://provider-ui:8000/upload/;
            proxy_redirect off;

            client_max_body_size 100m;
            proxy_request_buffering off;

            add_header Access-Control-Allow-Origin   ${ALLOWED_ORIGIN};
            add_header Access-Control-Allow-Methods  'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers  'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

            proxy_set_header Host               $host;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_set_header X-Forwarded-Host   $host;
        }

        # Provider-UI media files (e.g., /media/uploads/...)
        location /media/ {
            proxy_pass http://provider-ui:8000/media/;
            proxy_redirect off;

            add_header Access-Control-Allow-Origin   ${ALLOWED_ORIGIN};
            add_header Access-Control-Allow-Methods  'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers  'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

            proxy_set_header Host               $host;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_set_header X-Forwarded-Host   $host;
        }

        location /provider-ui/ {
            rewrite ^/provider-ui/(.*)$ /$1 break;
            proxy_pass http://provider-ui:8000/;
            proxy_redirect off;

            client_max_body_size 100m;
            proxy_request_buffering off;

            add_header Access-Control-Allow-Origin   ${ALLOWED_ORIGIN};
            add_header Access-Control-Allow-Methods  'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers  'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

            proxy_set_header Host               $host;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_set_header X-Forwarded-Host   $host;
        }

        # Proxy to Provider Connector services under /connector/
        location /connector/ {
            rewrite ^/connector/(.*)$ /$1 break;
            proxy_pass https://connector:8081/;
            add_header Access-Control-Allow-Origin ${ALLOWED_ORIGIN};
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header Host $host;
            proxy_redirect / /connector/;
        }

        location /broker/connectors/ {
            rewrite ^/broker/connectors/(.*)$ /connectors/$1 break;
            proxy_pass http://broker-core:8080/connectors/;
            proxy_redirect off;
        }

        location /broker/catalog/ {
            rewrite ^/broker/catalog/(.*)$ /catalog/$1 break;
            proxy_pass http://broker-core:8080/catalog/;
            proxy_redirect off;
        }

        location /broker/fuseki/ {
            rewrite ^/broker/fuseki/(.*)$ /$1 break;
            proxy_pass http://broker-fuseki:3030/;
            proxy_redirect off;
        }

        # Infrastructure path under /broker/infrastructure/
        location /broker/infrastructure/ {
            rewrite ^/broker/infrastructure/(.*)$ /infrastructure/$1 break;
            proxy_pass http://broker-core:8080/infrastructure/;
            proxy_redirect off;
        }

        # Proxy to Identity (Omejdn) under /auth
        location /auth {
            rewrite /auth/(.*) /$1 break;
            proxy_pass http://omejdn-server:4567;
            proxy_redirect off;
        }

        # Proxy to the Admin UI
        location / {
            rewrite /(.*) /$1 break;
            proxy_pass http://omejdn-ui;
            proxy_redirect off;
        }

        # Well-Known URIs for Identity
        location /.well-known/ {
            rewrite ^/\.well-known/oauth-authorization-server/auth /auth/.well-known/oauth-authorization-server last;
            rewrite ^/\.well-known/openid-configuration/auth       /auth/.well-known/openid-configuration       last;
            rewrite ^/\.well-known/webfinger /auth/.well-known/webfinger last;
            rewrite ^/\.well-known/jwks.json /auth/jwks.json last;
            proxy_pass http://omejdn-server:4567/;
            proxy_redirect off;
        }
    }

    # HTTP to HTTPS redirection
    server {
        listen 80;
        server_name ${FQDN};

        # Redirect all HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Additional configurations
    sendfile on;
    keepalive_timeout 65;
}
